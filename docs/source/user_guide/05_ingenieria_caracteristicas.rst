====================================
5. Ingenier√≠a de Caracter√≠sticas
====================================

Esta gu√≠a te ense√±ar√° a crear variables derivadas y transformaciones que mejoren el poder predictivo de tus modelos de Machine Learning.

Objetivo del M√≥dulo
===================

El m√≥dulo de ingenier√≠a de caracter√≠sticas te permite:

* üîß **Crear variables derivadas** autom√°ticamente
* üìê **Transformar variables** (log, sqrt, polinomiales)
* üéØ **Codificar categ√≥ricas** (one-hot, label encoding)
* üìä **Normalizar y escalar** datos
* üîó **Generar interacciones** entre variables
* üí° **Aplicar domain knowledge** financiero

Acceso al M√≥dulo
================

En el sidebar, click en:

.. code-block:: text

   üìà An√°lisis ‚Üí üîß Ingenier√≠a de Caracter√≠sticas

Variables Derivadas Autom√°ticas
================================

El sistema genera autom√°ticamente 15+ caracter√≠sticas derivadas:

Ratios Financieros
------------------

.. code-block:: text

   ‚úì dti (Debt-to-Income): cuota / salario * 100
   ‚úì ltv (Loan-to-Value): monto / valor_inmueble * 100
   ‚úì ratio_patrimonio_deuda: patrimonio / monto
   ‚úì ratio_cuota_ahorro: cuota / capacidad_ahorro
   ‚úì ratio_egreso_salario: egresos / salario * 100

Capacidades
-----------

.. code-block:: text

   ‚úì capacidad_ahorro: salario - egresos
   ‚úì capacidad_residual: capacidad_ahorro - cuota
   ‚úì meses_colchon: saldo_banco / cuota

Scores
------

.. code-block:: text

   ‚úì score_edad: Puntaje basado en edad √≥ptima
   ‚úì score_estabilidad_laboral: Antig√ºedad + tipo empleo
   ‚úì riesgo_legal: Basado en n√∫mero de demandas

Interacciones
-------------

.. code-block:: text

   ‚úì educacion_x_salario: nivel_educacion * salario
   ‚úì edad_x_antiguedad: edad * antiguedad_empleo
   ‚úì ltv_x_puntaje: ltv * (900 - puntaje_datacredito)

Transformaciones
================

Transformaciones Num√©ricas
---------------------------

**1. Logar√≠tmica**

Para variables con distribuci√≥n sesgada:

.. code-block:: text

   Variables a transformar:
   ‚òë salario_mensual
   ‚òë valor_inmueble
   ‚òë patrimonio_total
   
   Transformaci√≥n: log(x + 1)
   
   [üîÑ Aplicar Transformaci√≥n Log]

**Resultado:**

.. code-block:: text

   salario_mensual_log creada
   Asimetr√≠a antes: 1.23 ‚Üí despu√©s: 0.15
   Distribuci√≥n m√°s normal ‚úì

**2. Ra√≠z Cuadrada**

Para reducir impacto de outliers:

.. code-block:: text

   Variables: monto_credito, cuota_mensual
   Transformaci√≥n: sqrt(x)

**3. Box-Cox**

Transformaci√≥n autom√°tica √≥ptima:

.. code-block:: text

   [üéØ Aplicar Box-Cox Autom√°tico]
   
   Lambda √≥ptimo encontrado: 0.23
   Transformaci√≥n aplicada ‚úì

Transformaciones Polinomiales
------------------------------

Crear t√©rminos cuadr√°ticos y c√∫bicos:

.. code-block:: text

   Variable: edad
   
   ‚òë edad¬≤
   ‚òë edad¬≥
   
   [üìê Generar Polinomios]

**Uso:** Capturar relaciones no lineales.

Codificaci√≥n de Variables
==========================

Variables Categ√≥ricas
---------------------

**1. One-Hot Encoding**

.. code-block:: text

   Variable: tipo_empleo
   
   Resultado:
   ‚úì tipo_empleo_Formal
   ‚úì tipo_empleo_Informal
   ‚úì tipo_empleo_Independiente

**2. Label Encoding**

.. code-block:: text

   Variable: nivel_educacion
   
   Mapeo:
   Bachiller ‚Üí 1
   T√©cnico ‚Üí 2
   Profesional ‚Üí 3
   Posgrado ‚Üí 4

**3. Target Encoding**

Codifica basado en la media del target:

.. code-block:: text

   Variable: ciudad
   Target: nivel_riesgo
   
   Bogot√° ‚Üí 0.58 (% riesgo alto)
   Medell√≠n ‚Üí 0.62
   Cali ‚Üí 0.65
   ...

Variables Ordinales
-------------------

Para variables con orden natural:

.. code-block:: text

   Variable: estrato_socioeconomico
   Ya es ordinal: 1, 2, 3, 4, 5, 6 ‚úì
   
   Variable: nivel_dti
   Mapeo:
   Excelente ‚Üí 1
   Bueno ‚Üí 2
   Aceptable ‚Üí 3
   L√≠mite ‚Üí 4
   Alto ‚Üí 5
   Cr√≠tico ‚Üí 6

Normalizaci√≥n y Escalado
=========================

M√©todos de Escalado
-------------------

**1. StandardScaler (Z-Score)**

.. code-block:: text

   F√≥rmula: (x - Œº) / œÉ
   
   Resultado: Media = 0, Desv. Est. = 1
   
   Uso: Algoritmos sensibles a escala (SVM, KNN, RBM)

**2. MinMaxScaler**

.. code-block:: text

   F√≥rmula: (x - min) / (max - min)
   
   Resultado: Rango [0, 1]
   
   Uso: Redes neuronales, algoritmos de distancia

**3. RobustScaler**

.. code-block:: text

   F√≥rmula: (x - mediana) / IQR
   
   Resultado: Robusto a outliers
   
   Uso: Datos con muchos outliers

Aplicar Escalado
----------------

.. code-block:: text

   M√©todo de escalado: StandardScaler
   
   Variables a escalar:
   ‚òë salario_mensual
   ‚òë valor_inmueble
   ‚òë puntaje_datacredito
   ‚òë dti
   ‚òë ltv
   
   [‚öñÔ∏è Aplicar Escalado]

.. warning::
   Guarda los par√°metros del scaler para aplicar a datos nuevos.

Binning y Discretizaci√≥n
=========================

Crear Rangos
------------

**Binning Equidistante:**

.. code-block:: text

   Variable: edad
   N√∫mero de bins: 4
   
   Resultado:
   [22-32): Joven
   [32-42): Adulto Joven
   [42-52): Adulto
   [52-65]: Adulto Mayor

**Binning por Cuantiles:**

.. code-block:: text

   Variable: salario_mensual
   Cuantiles: 5 (quintiles)
   
   Resultado:
   Q1: Muy Bajo ($1M - $2M)
   Q2: Bajo ($2M - $3.5M)
   Q3: Medio ($3.5M - $5M)
   Q4: Medio-Alto ($5M - $8M)
   Q5: Alto ($8M+)

**Binning Personalizado:**

.. code-block:: text

   Variable: puntaje_datacredito
   
   Rangos personalizados:
   [150-400): Cr√≠tico
   [400-500): Muy Malo
   [500-600): Malo
   [600-700): Regular
   [700-800): Bueno
   [800-850): Muy Bueno
   [850-950]: Excelente

Selecci√≥n de Caracter√≠sticas
=============================

M√©todos Autom√°ticos
-------------------

**1. Correlaci√≥n con Target**

.. code-block:: text

   [üéØ Calcular Importancia por Correlaci√≥n]
   
   Top 10 Features:
   1. dti: 0.68
   2. puntaje_datacredito: -0.54
   3. capacidad_residual: -0.48
   4. ltv: 0.42
   5. score_estabilidad: -0.38
   ...

**2. Mutual Information**

Captura relaciones no lineales:

.. code-block:: text

   [üìä Calcular Mutual Information]
   
   Top features por MI:
   1. dti: 0.42
   2. capacidad_residual: 0.38
   3. puntaje_datacredito: 0.35
   ...

**3. Feature Importance (Tree-based)**

Usa Random Forest para calcular importancia:

.. code-block:: text

   [üå≥ Calcular Feature Importance]
   
   Importancia por Random Forest:
   1. dti: 0.18
   2. puntaje_datacredito: 0.15
   3. capacidad_residual: 0.12
   ...

Eliminar Features Redundantes
------------------------------

**Multicolinealidad:**

.. code-block:: text

   [üîç Detectar Multicolinealidad]
   
   VIF (Variance Inflation Factor):
   
   salario_mensual: 2.3 ‚úì
   patrimonio_total: 8.5 ‚ö†Ô∏è (alta correlaci√≥n)
   capacidad_ahorro: 12.3 ‚ö†Ô∏è (alta correlaci√≥n)
   
   Recomendaci√≥n: Eliminar capacidad_ahorro

**Correlaci√≥n Alta:**

.. code-block:: text

   Pares con correlaci√≥n > 0.9:
   
   valor_inmueble ‚Üî monto_credito: 0.95
   Acci√≥n: Mantener solo monto_credito

Casos de Uso
============

**Caso 1: Preparar para RBM**

Objetivo: Crear features para entrenamiento de RBM.

Pasos:
1. Generar variables derivadas autom√°ticas
2. Normalizar con StandardScaler
3. Seleccionar top 20 features
4. Guardar transformaciones

**Caso 2: Mejorar Modelo Supervisado**

Objetivo: Aumentar precisi√≥n de clasificadores.

Pasos:
1. Crear interacciones polinomiales
2. Aplicar transformaciones log
3. Codificar categ√≥ricas (one-hot)
4. Seleccionar por importancia

**Caso 3: Reducir Dimensionalidad**

Objetivo: Eliminar features redundantes.

Pasos:
1. Calcular VIF
2. Eliminar alta multicolinealidad
3. Seleccionar por mutual information
4. Validar con modelo baseline

Tips y Mejores Pr√°cticas
=========================

‚úÖ **Haz:**

- Crea features basadas en domain knowledge
- Normaliza antes de RBM y redes neuronales
- Guarda transformaciones para producci√≥n
- Valida features con modelos simples

‚ùå **Evita:**

- Crear demasiadas features (curse of dimensionality)
- Aplicar transformaciones sin entender el impacto
- Olvidar escalar datos de test
- Usar target encoding sin validaci√≥n cruzada

Guardar Transformaciones
========================

.. code-block:: text

   [üíæ Guardar Pipeline de Transformaciones]
   
   Guardado:
   ‚úì Scaler (StandardScaler)
   ‚úì Encoders (OneHot, Label)
   ‚úì Feature names
   ‚úì Par√°metros de transformaci√≥n
   
   Archivo: feature_pipeline.pkl

.. important::
   Usa el mismo pipeline en producci√≥n para consistencia.

Troubleshooting
===============

**Problema: Transformaci√≥n log falla**

Soluci√≥n: Verifica que no haya valores negativos o cero.

**Problema: Scaler produce NaN**

Soluci√≥n: Elimina valores faltantes antes de escalar.

**Problema: Demasiadas features despu√©s de one-hot**

Soluci√≥n: Usa target encoding o agrupa categor√≠as raras.

Pr√≥ximos Pasos
==============

Con tus features creadas:

1. **Segmentar**: :doc:`06_clustering`
2. **Entrenar RBM**: :doc:`07_rbm`
3. **Modelos supervisados**: :doc:`08_modelos_supervisados`

¬°Features listas para modelado! üîß