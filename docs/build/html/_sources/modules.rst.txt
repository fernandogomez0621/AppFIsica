M√≥dulos del Sistema
==================

El sistema est√° organizado en m√≥dulos especializados que trabajan en conjunto
para proporcionar una soluci√≥n completa de an√°lisis de riesgo crediticio.

M√≥dulos Principales
------------------

.. toctree::
   :maxdepth: 2

   modules/data_generation
   modules/data_processing
   modules/analysis
   modules/feature_engineering
   modules/clustering
   modules/rbm
   modules/supervised_models
   modules/prediction
   modules/educational_rag
   modules/retraining

Referencia Completa de la API
------------------------------

Documentaci√≥n detallada de todos los m√≥dulos del c√≥digo fuente:

.. toctree::
   :maxdepth: 2
   :caption: API Reference

   api/generar_datos
   api/data_processor
   api/univariate_analysis
   api/bivariate_analysis
   api/feature_engineering
   api/clustering
   api/rbm_model
   api/supervised_models
   api/prediction
   api/educational_rag
   api/retraining

Arquitectura del Sistema
-----------------------

.. code-block:: text

   AppFIsica/
   ‚îÇ
   ‚îú‚îÄ‚îÄ app.py                          # üöÄ Aplicaci√≥n principal
   ‚îú‚îÄ‚îÄ src/                           # üíª M√≥dulos de c√≥digo
   ‚îÇ   ‚îú‚îÄ‚îÄ generar_datos.py           # üìä Generaci√≥n de datos
   ‚îÇ   ‚îú‚îÄ‚îÄ data_processor.py          # üîß Procesamiento
   ‚îÇ   ‚îú‚îÄ‚îÄ univariate_analysis.py     # üìà An√°lisis univariado
   ‚îÇ   ‚îú‚îÄ‚îÄ bivariate_analysis.py      # üîó An√°lisis bivariado
   ‚îÇ   ‚îú‚îÄ‚îÄ feature_engineering.py     # ‚öôÔ∏è Ingenier√≠a caracter√≠sticas
   ‚îÇ   ‚îú‚îÄ‚îÄ clustering.py              # üéØ Clustering
   ‚îÇ   ‚îú‚îÄ‚îÄ rbm_model.py               # ‚ö° M√°quina de Boltzmann
   ‚îÇ   ‚îú‚îÄ‚îÄ supervised_models.py       # ü§ñ Modelos supervisados
   ‚îÇ   ‚îú‚îÄ‚îÄ prediction.py              # üîÆ Predicci√≥n
   ‚îÇ   ‚îî‚îÄ‚îÄ educational_rag.py         # üéì Sistema RAG
   ‚îÇ
   ‚îú‚îÄ‚îÄ data/                          # üíæ Almacenamiento de datos
   ‚îú‚îÄ‚îÄ models/                        # üß† Modelos entrenados
   ‚îú‚îÄ‚îÄ articles/                      # üìö Papers cient√≠ficos
   ‚îî‚îÄ‚îÄ docs/                          # üìñ Documentaci√≥n

Flujo de Datos
--------------

.. mermaid::

   graph TD
       A[Datos Originales] --> B[Validaci√≥n y Limpieza]
       B --> C[An√°lisis Exploratorio]
       C --> D[Ingenier√≠a de Caracter√≠sticas]
       D --> E[Clustering]
       D --> F[Entrenamiento RBM]
       F --> G[Caracter√≠sticas RBM]
       D --> H[Modelos Supervisados]
       G --> H
       H --> I[Predicci√≥n]
       
       J[Papers PDF] --> K[Sistema RAG]
       K --> L[Chat Educativo]

Descripci√≥n de M√≥dulos
---------------------

üìä Generaci√≥n de Datos
~~~~~~~~~~~~~~~~~~~~~

**Prop√≥sito**: Crear datasets sint√©ticos realistas para Colombia.

**Caracter√≠sticas**:
- Correlaciones l√≥gicas entre variables
- Distribuciones realistas (60% Bajo, 25% Medio, 15% Alto)
- Configuraci√≥n de par√°metros
- Exportaci√≥n m√∫ltiple (CSV, Excel, Parquet)

**Uso**:

.. code-block:: python

   from src.generar_datos import generar_datos_credito_realista
   
   df = generar_datos_credito_realista(
       n_registros=10000,
       semilla=42
   )

üîß Procesamiento de Datos
~~~~~~~~~~~~~~~~~~~~~~~~

**Prop√≥sito**: Validar y limpiar datos cargados por el usuario.

**Funcionalidades**:
- Carga de m√∫ltiples formatos
- Validaciones autom√°ticas
- Detecci√≥n de outliers
- Imputaci√≥n inteligente
- Reportes de calidad

üìà An√°lisis Descriptivo
~~~~~~~~~~~~~~~~~~~~~~

**Prop√≥sito**: An√°lisis estad√≠stico univariado y bivariado.

**An√°lisis Univariado**:
- Estad√≠sticas completas (media, mediana, percentiles)
- Visualizaciones (histogramas, boxplots, Q-Q plots)
- Tests de normalidad
- Detecci√≥n de outliers

**An√°lisis Bivariado**:
- Matrices de correlaci√≥n
- Gr√°ficos de dispersi√≥n
- Tablas de contingencia
- Tests estad√≠sticos (Chi¬≤, ANOVA)

‚öôÔ∏è Ingenier√≠a de Caracter√≠sticas
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Prop√≥sito**: Crear variables derivadas autom√°ticamente.

**Tipos de Caracter√≠sticas**:
- **Ratios Financieros**: LTV, DTI, capacidad ahorro
- **Indicadores de Riesgo**: Scores de edad, estabilidad, legal
- **Interacciones**: Educaci√≥n√óSalario, Edad√óEmpleo
- **Discretizaci√≥n**: Grupos de edad, rangos salariales
- **Transformaciones**: Log, ra√≠z cuadrada

üéØ Clustering
~~~~~~~~~~~~

**Prop√≥sito**: Segmentaci√≥n de solicitantes en grupos homog√©neos.

**Algoritmos**:
- K-Means (r√°pido, esf√©rico)
- Jer√°rquico (dendrograma)
- DBSCAN (detecta outliers)
- Gaussian Mixture (probabil√≠stico)

**Visualizaciones**:
- PCA 2D/3D interactivo
- Determinaci√≥n de K √≥ptimo
- Perfiles por cluster

‚ö° M√°quina de Boltzmann Restringida
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Prop√≥sito**: Extracci√≥n de caracter√≠sticas latentes.

**Implementaci√≥n**:
- RBM desde cero en NumPy
- Contrastive Divergence (CD-k)
- M√©tricas de evaluaci√≥n
- Visualizaciones de pesos

**Ecuaciones Clave**:

.. math::

   P(h_j = 1 | v) = \sigma(b_j + \sum_i v_i W_{ij})

.. math::

   P(v_i = 1 | h) = \sigma(a_i + \sum_j h_j W_{ij})

ü§ñ Modelos Supervisados
~~~~~~~~~~~~~~~~~~~~~~

**Prop√≥sito**: Clasificaci√≥n de riesgo crediticio.

**Modelos Incluidos**:
- Logistic Regression (baseline)
- Random Forest
- XGBoost
- LightGBM
- Support Vector Machine
- Multi-Layer Perceptron

**Evaluaci√≥n**:
- Validaci√≥n cruzada 5-fold
- M√∫ltiples m√©tricas (Accuracy, F1, ROC-AUC)
- Matrices de confusi√≥n
- Importancia de caracter√≠sticas

üîÆ Predicci√≥n
~~~~~~~~~~~~

**Prop√≥sito**: Evaluar riesgo de nuevos solicitantes.

**Caracter√≠sticas**:
- Formulario interactivo
- Validaciones en tiempo real
- Explicaciones detalladas
- Recomendaciones autom√°ticas
- Historial de predicciones

üéì Sistema RAG Educativo
~~~~~~~~~~~~~~~~~~~~~~~

**Prop√≥sito**: Aprendizaje interactivo sobre RBMs.

**Componentes**:
- Procesamiento de PDFs (PyMuPDF)
- Base vectorial (ChromaDB)
- Embeddings locales (HuggingFace)
- LLM (Groq Llama 3.3 70B)
- Chat interactivo

Configuraci√≥n Avanzada
---------------------

Hiperpar√°metros RBM
~~~~~~~~~~~~~~~~~~

.. code-block:: python

   rbm_config = {
       'n_hidden': 100,        # Unidades ocultas
       'learning_rate': 0.01,  # Tasa de aprendizaje
       'n_epochs': 100,        # √âpocas
       'batch_size': 64,       # Tama√±o de batch
       'k_cd': 1              # Pasos CD
   }

Configuraci√≥n RAG
~~~~~~~~~~~~~~~~

.. code-block:: python

   rag_config = {
       'chunk_size': 1500,     # Tama√±o de chunks
       'chunk_overlap': 300,   # Solapamiento
       'top_k_results': 6,     # Documentos relevantes
       'temperature': 0.3      # Creatividad LLM
   }

Optimizaci√≥n de Rendimiento
~~~~~~~~~~~~~~~~~~~~~~~~~~

**Para Datasets Grandes (>50K registros)**:
- Usar muestreo estratificado
- Reducir √©pocas de RBM
- Usar validaci√≥n holdout en lugar de CV

**Para Recursos Limitados**:
- Reducir ``n_hidden`` en RBM
- Usar menos modelos supervisados
- Desactivar visualizaciones 3D

Integraci√≥n con Otros Sistemas
-----------------------------

API REST
~~~~~~~~

El sistema puede extenderse con una API REST:

.. code-block:: python

   from fastapi import FastAPI
   from src.prediction import CreditRiskPredictor
   
   app = FastAPI()
   predictor = CreditRiskPredictor()
   
   @app.post("/predict")
   def predict_risk(applicant_data: dict):
       return predictor.predict_risk(applicant_data)

Base de Datos
~~~~~~~~~~~~

Para producci√≥n, considera integrar con:
- PostgreSQL para datos transaccionales
- MongoDB para documentos no estructurados
- Redis para cach√© de predicciones

Monitoreo
~~~~~~~~

Implementa monitoreo de:
- Drift en distribuciones de datos
- Degradaci√≥n de m√©tricas de modelos
- Uso de recursos del sistema
- Latencia de predicciones